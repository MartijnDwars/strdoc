
<module>
  <name>strategy/pack/graph</name>
  <description><![CDATA[
                        A generic algorithm for mapping a graph to a collection of nodes reachable
                        from a given root node.
                        
                        Basic idea: configuration of the form (todo, done, files),
                        keep adding files corresponding to the names in \verb|todo| until empty
                        
                        ]]></description>
  
  
  
  <strategy>
    <name>graph-nodes</name>
    <description><![CDATA[
                          The strategy 'graph-nodes' is a generic
                          algorithm for mapping a graph to a collection of nodes reachable
                          from a given root node. The algorithm is parameterized with the
                          following notions: 'get-node' maps a node name and a graph to the
                          node itself, 'out-edges' maps a node to the names of its out
                          edges, 'add-node' that adds a name and its corresponding node to a
                          collection of nodes.
                          
                          get-node  :: name * graph -> node
                          out-edges :: node -> List(name)
                          add-node  :: name * node * nodes -> nodes
                          
                          ]]></description>
    <start>74</start>
    <end>76</end>
    
    
  </strategy>
  
</module>
