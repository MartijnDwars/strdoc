
<module>
  <name>strategy/general/parenthesize</name>
  <description><![CDATA[
                        This module defines a generic strategy for placing parentheses in
                        abstract syntax trees based on priority and associativity declarations.
                        
                        Reference
                        
                        Eelco Visser. Syntax Definition for Language Prototyping. PhD Thesis,
                        University of Amsterdam, 1997.
                        
                        Typical usage: (from module Tiger-Ensugar in the tiger/tiger-front
                        package)
                        
                        TigerParenthesize =
                        !Seq([<id>])
                        
                        tiger-parenthesize =
                        parenthesize(TigerParenthesize, tiger-priorities)
                        
                        tiger-priorities =
                        ![(None,			["Uminus","FieldVar","Subscript"]),
                        (Some("left"),		["Power"]),
                        (Some("left"),		["Times","Divide"]),
                        (Some("left"),		["Plus","Minus"]),
                        (Some("non-assoc"),	["CPlus","CMinus","Eq","Neq","Gt","Lt","Geq","Leq"]),
                        (Some("left"),		["And"]),
                        (Some("left"),		["Or"]),
                        (None,			["Array"]),
                        (None,			["Assign"]),
                        (Some("right"),		["If","While","For"])]
                        
                        
                        ]]></description>
  
  
  
</module>
