
<module>
  <name>collection/list/bag</name>
  <description><![CDATA[
                        This module contains strategies for handling bags.
                        
                        A bag is a set of elements where each element has an occurence number. Adding
                        an element to a bag which already exists, will increase the occurence number
                        for that element by one.
                        
                        In the current implementation, bags are represented as lists of
                        (element,occurrence) tuples. Adding a new element is done using bag-insert.
                        
                        ]]></description>
  
  
  
  <strategy>
    <name>bag-insert</name>
    <description><![CDATA[
                          Inserts a new element into a bag. The element must be on the form
                          a (element, occurrence) tuple, where occurrence is an integer. The
                          bag may be empty.
                          
                          Example: <bag-insert> (('a', 1), []) => [('a',1)]
                          
                          
                          ]]></description>
    <start>23</start>
    <end>25</end>
    <type><![CDATA[(elem, occur) * List(a) -> List(a)]]></type>
    
  </strategy>
  
  
  <strategy>
    <name>bag-union</name>
    <description><![CDATA[
                          Takes the union of two bags.
                          
                          Example: <bag-union> ([('a',2), ('b',1)], [('a',1)]) => [('b',1),('a',3)]
                          
                          
                          ]]></description>
    <start>34</start>
    <end>35</end>
    <type><![CDATA[List(a) * List(a) -> List(a)]]></type>
    
  </strategy>
  
  
  <strategy>
    <name>bag-insert</name>
    <description><![CDATA[
                          Inserts a new element into a bag. The element must be on the form
                          a (element, occurrence) tuple, where occurrence is an integer. The
                          bag may be empty.  The strategy parameter is used to check elements
                          for equality.
                          
                          
                          ]]></description>
    <start>47</start>
    <end>49</end>
    <type><![CDATA[  (elem, occurrence) * List(a) -> List(a)]]></type>
    <param><![CDATA[ Used to test equality on elements.]]></param>
  </strategy>
  
  
  <strategy>
    <name>bag-union</name>
    <description><![CDATA[
                          Takes the union of two bags. The strategy parameter is used
                          to check elements for equality.
                          
                          
                          ]]></description>
    <start>58</start>
    <end>59</end>
    <type><![CDATA[  List(a) * List(a) -> List(a)]]></type>
    <param><![CDATA[ Used to test equality on elements.]]></param>
  </strategy>
  
</module>
